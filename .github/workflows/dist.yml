---
name: dist

on: [push, pull_request, repository_dispatch]

jobs:
  check:
    # if: github.event_name != 'repository_dispatch'
    # runs-on: ubuntu-latest
    
    # steps:
    # - uses: actions/checkout@v2
      
    # - uses: actions/setup-python@v1
    #   with:
    #     python-version: 3.8
    # - name: Black
    #   run: |
    #     pip install black
    #     black --check --diff .

  bump:
    # if: github.event_name == 'repository_dispatch' && github.event.action == 'tag'
    # runs-on: ubuntu-latest
    # steps:
    # - name: Information
    #   run: |
    #     echo "'${{ github.event.action }}' received from '${{ github.event.client_payload.repository }}'"
    # - uses: actions/checkout@v2
    # - uses: actions/setup-python@v1
    #   with:
    #     python-version: 3.8

    # - name: Install Dependencies
    #   run: |
    #     pip install gitpython

    # - name: Bump Requirements
    #   run: |
    #     python update_req.py '${{ github.event.client_payload.repository }}' '${{ github.event.client_payload.package_name }}'

    # - name: Commit changes
    #   run: |
    #     git config --local user.email "action@github.com"
    #     git config --local user.name "Github Action"
    #     git add requirements.txt
    #     git commit -m "Bump '${{ github.event.client_payload.package_name }}' dependency"

    # - name: Push changes
    #   uses: ad-m/github-push-action@master
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}

    # - name: Bump Version and push Tag
    #   uses: anothrNick/github-tag-action@master
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     WTIH_V: false
    #     DEFAULT_BUMP: patch


  publish:
    if: (github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')) || (github.event_name == 'repository_dispatch' && github.event.action == 'tag')
    runs-on: ubuntu-latest
    needs: [check, bump]

    steps:
    - uses: actions/checkout@v2
    
    - uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - run: pip install wheel

    - name: Build packages
      run: python setup.py sdist bdist_wheel
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
